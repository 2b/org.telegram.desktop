diff --git a/Telegram/SourceFiles/platform/linux/linux_gdk_helper.cpp b/Telegram/SourceFiles/platform/linux/linux_gdk_helper.cpp
index 92c028651..314f2bbd1 100644
--- a/Telegram/SourceFiles/platform/linux/linux_gdk_helper.cpp
+++ b/Telegram/SourceFiles/platform/linux/linux_gdk_helper.cpp
@@ -5,7 +5,6 @@ the official desktop application for the Telegram messaging service.
 For license and copyright information please follow this link:
 https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 */
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 #include "platform/linux/linux_gdk_helper.h"
 
 #include "platform/linux/linux_libs.h"
@@ -99,4 +98,3 @@ void XSetTransientForHint(GdkWindow *window, quintptr winId) {
 
 } // namespace internal
 } // namespace Platform
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
diff --git a/Telegram/SourceFiles/platform/linux/linux_gdk_helper.h b/Telegram/SourceFiles/platform/linux/linux_gdk_helper.h
index af331f179..c95f591d3 100644
--- a/Telegram/SourceFiles/platform/linux/linux_gdk_helper.h
+++ b/Telegram/SourceFiles/platform/linux/linux_gdk_helper.h
@@ -9,7 +9,6 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 
 #include <QtCore/QObject>
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 extern "C" {
 #undef signals
 #include <gtk/gtk.h>
@@ -26,4 +25,3 @@ void XSetTransientForHint(GdkWindow *window, quintptr winId);
 
 } // namespace internal
 } // namespace Platform
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
diff --git a/Telegram/SourceFiles/platform/linux/linux_libnotify.cpp b/Telegram/SourceFiles/platform/linux/linux_libnotify.cpp
index 657c46075..558ad266b 100644
--- a/Telegram/SourceFiles/platform/linux/linux_libnotify.cpp
+++ b/Telegram/SourceFiles/platform/linux/linux_libnotify.cpp
@@ -31,7 +31,6 @@ bool loadLibrary(QLibrary &lib, const char *name, int version) {
 
 } // namespace
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 f_notify_init notify_init = nullptr;
 f_notify_uninit notify_uninit = nullptr;
 f_notify_is_initted notify_is_initted = nullptr;
@@ -104,7 +103,6 @@ void startLibNotify() {
 	load(lib_notify, "notify_notification_close", notify_notification_close);
 	load(lib_notify, "notify_notification_get_closed_reason", notify_notification_get_closed_reason);
 }
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 } // namespace Libs
 } // namespace Platform
diff --git a/Telegram/SourceFiles/platform/linux/linux_libnotify.h b/Telegram/SourceFiles/platform/linux/linux_libnotify.h
index 6dcfd676a..d262282bf 100644
--- a/Telegram/SourceFiles/platform/linux/linux_libnotify.h
+++ b/Telegram/SourceFiles/platform/linux/linux_libnotify.h
@@ -7,7 +7,6 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 */
 #pragma once
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 extern "C" {
 #undef signals
 #include <gtk/gtk.h>
@@ -117,4 +116,3 @@ extern f_notify_notification_get_closed_reason notify_notification_get_closed_re
 
 } // namespace Libs
 } // namespace Platform
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
diff --git a/Telegram/SourceFiles/platform/linux/linux_libs.cpp b/Telegram/SourceFiles/platform/linux/linux_libs.cpp
index d1ff24303..47b0f1eb8 100644
--- a/Telegram/SourceFiles/platform/linux/linux_libs.cpp
+++ b/Telegram/SourceFiles/platform/linux/linux_libs.cpp
@@ -31,7 +31,6 @@ bool loadLibrary(QLibrary &lib, const char *name, int version) {
     return false;
 }
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 bool setupGtkBase(QLibrary &lib_gtk) {
 	if (!load(lib_gtk, "gtk_init_check", gtk_init_check)) return false;
 	if (!load(lib_gtk, "gtk_menu_new", gtk_menu_new)) return false;
@@ -130,11 +129,9 @@ bool setupAppIndicator(QLibrary &lib_indicator) {
 	DEBUG_LOG(("Library appindicator functions loaded!"));
 	return true;
 }
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 } // namespace
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 f_gtk_init_check gtk_init_check = nullptr;
 f_gtk_menu_new gtk_menu_new = nullptr;
 f_gtk_menu_get_type gtk_menu_get_type = nullptr;
@@ -220,11 +217,9 @@ f_g_list_free g_list_free = nullptr;
 f_g_list_free_full g_list_free_full = nullptr;
 f_g_error_free g_error_free = nullptr;
 f_g_slist_free g_slist_free = nullptr;
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 void start() {
 	DEBUG_LOG(("Loading libraries"));
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 
 	bool gtkLoaded = false;
 	bool indicatorLoaded = false;
@@ -275,7 +270,6 @@ void start() {
 		load(lib_gtk, "g_idle_add", g_idle_add);
 
 		internal::GdkHelperLoad(lib_gtk);
-
 		load(lib_gtk, "gtk_dialog_get_widget_for_response", gtk_dialog_get_widget_for_response);
 		load(lib_gtk, "gtk_button_set_label", gtk_button_set_label);
 		load(lib_gtk, "gtk_button_get_type", gtk_button_get_type);
@@ -286,7 +280,6 @@ void start() {
 	if (gtkLoaded) {
 		startLibNotify();
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 } // namespace Libs
diff --git a/Telegram/SourceFiles/platform/linux/linux_libs.h b/Telegram/SourceFiles/platform/linux/linux_libs.h
index 8f9a241e7..d86528607 100644
--- a/Telegram/SourceFiles/platform/linux/linux_libs.h
+++ b/Telegram/SourceFiles/platform/linux/linux_libs.h
@@ -7,7 +7,6 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 */
 #pragma once
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 extern "C" {
 #undef signals
 #ifdef TDESKTOP_USE_AYATANA_INDICATORS
@@ -20,8 +19,6 @@ extern "C" {
 #define signals public
 } // extern "C"
 
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
-
 namespace Platform {
 namespace Libs {
 
@@ -42,7 +39,6 @@ bool load(QLibrary &lib, const char *name, Function &func) {
 	return false;
 }
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 typedef gboolean (*f_gtk_init_check)(int *argc, char ***argv);
 extern f_gtk_init_check gtk_init_check;
 
@@ -361,7 +357,6 @@ extern f_g_error_free g_error_free;
 
 typedef void (*f_g_slist_free)(GSList *list);
 extern f_g_slist_free g_slist_free;
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 } // namespace Libs
 } // namespace Platform
diff --git a/Telegram/SourceFiles/platform/linux/main_window_linux.cpp b/Telegram/SourceFiles/platform/linux/main_window_linux.cpp
index 536969165..348be040b 100644
--- a/Telegram/SourceFiles/platform/linux/main_window_linux.cpp
+++ b/Telegram/SourceFiles/platform/linux/main_window_linux.cpp
@@ -24,14 +24,12 @@ namespace {
 bool noQtTrayIcon = false, tryAppIndicator = false;
 bool useGtkBase = false, useAppIndicator = false, useStatusIcon = false, trayIconChecked = false, useUnityCount = false;
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 AppIndicator *_trayIndicator = 0;
 GtkStatusIcon *_trayIcon = 0;
 GtkWidget *_trayMenu = 0;
 GdkPixbuf *_trayPixbuf = 0;
 QByteArray _trayPixbufData;
 QList<QPair<GtkWidget*, QObject*> > _trayItems;
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 int32 _trayIconSize = 22;
 bool _trayIconMuted = true;
@@ -40,7 +38,6 @@ QImage _trayIconImageBack, _trayIconImage;
 QString _desktopFile;
 QString _dbusPath = "/";
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 void _trayIconPopup(GtkStatusIcon *status_icon, guint button, guint32 activate_time, gpointer popup_menu) {
 	Libs::gtk_menu_popup(Libs::gtk_menu_cast(popup_menu), NULL, NULL, Libs::gtk_status_icon_position_menu, status_icon, button, activate_time);
 }
@@ -58,19 +55,16 @@ gboolean _trayIconResized(GtkStatusIcon *status_icon, gint size, gpointer popup_
 	if (Global::started()) Notify::unreadCounterUpdated();
 	return FALSE;
 }
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 #define QT_RED 0
 #define QT_GREEN 1
 #define QT_BLUE 2
 #define QT_ALPHA 3
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 #define GTK_RED 2
 #define GTK_GREEN 1
 #define GTK_BLUE 0
 #define GTK_ALPHA 3
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 QImage _trayIconImageGen() {
 	const auto counter = Core::App().unreadBadge();
@@ -135,7 +129,6 @@ QString _trayIconImageFile() {
 
 	return QString();
 }
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 
 void loadPixbuf(QImage image) {
 	int w = image.width(), h = image.height(), perline = image.bytesPerLine(), s = image.byteCount();
@@ -180,8 +173,6 @@ static gboolean _trayIconCheck(gpointer/* pIn*/) {
 	return FALSE;
 }
 
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
-
 quint32 djbStringHash(QString string) {
         quint32 hash = 5381;
         QByteArray chars = string.toLatin1();
@@ -202,17 +193,11 @@ MainWindow::MainWindow() {
 }
 
 bool MainWindow::hasTrayIcon() const {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	return trayIcon || ((useAppIndicator || (useStatusIcon && trayIconChecked)) && (Global::WorkMode().value() != dbiwmWindowOnly));
-#else
-	return trayIcon;
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 void MainWindow::psStatusIconCheck() {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	_trayIconCheck(0);
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 	if (cSupportTray() || !--_psCheckStatusIconLeft) {
 		_psCheckStatusIconTimer.stop();
 		return;
@@ -223,7 +208,6 @@ void MainWindow::psShowTrayMenu() {
 }
 
 void MainWindow::psTrayMenuUpdated() {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	if (noQtTrayIcon && (useAppIndicator || useStatusIcon)) {
 		const QList<QAction*> &actions = trayIconMenu->actions();
 		if (_trayItems.isEmpty()) {
@@ -247,7 +231,6 @@ void MainWindow::psTrayMenuUpdated() {
 			}
 		}
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 void MainWindow::psSetupTrayIcon() {
@@ -291,13 +274,11 @@ void MainWindow::workmodeUpdated(DBIWorkMode mode) {
 
 	if (mode == dbiwmWindowOnly) {
 		if (noQtTrayIcon) {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 			if (useAppIndicator) {
 				Libs::app_indicator_set_status(_trayIndicator, APP_INDICATOR_STATUS_PASSIVE);
 			} else if (useStatusIcon) {
 				Libs::gtk_status_icon_set_visible(_trayIcon, false);
 			}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 		} else {
 			if (trayIcon) {
 				trayIcon->setContextMenu(0);
@@ -307,13 +288,11 @@ void MainWindow::workmodeUpdated(DBIWorkMode mode) {
 		}
 	} else {
 		if (noQtTrayIcon) {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 			if (useAppIndicator) {
 				Libs::app_indicator_set_status(_trayIndicator, APP_INDICATOR_STATUS_ACTIVE);
 			} else if (useStatusIcon) {
 				Libs::gtk_status_icon_set_visible(_trayIcon, true);
 			}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 		} else {
 			psSetupTrayIcon();
 		}
@@ -321,7 +300,6 @@ void MainWindow::workmodeUpdated(DBIWorkMode mode) {
 }
 
 void MainWindow::psUpdateIndicator() {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	_psUpdateIndicatorTimer.stop();
 	_psLastIndicatorUpdate = getms();
 	QFileInfo iconFile(_trayIconImageFile());
@@ -332,7 +310,6 @@ void MainWindow::psUpdateIndicator() {
 	} else {
 		useAppIndicator = false;
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 void MainWindow::unreadCounterChangedHook() {
@@ -361,7 +338,6 @@ void MainWindow::updateIconCounters() {
 	}
 
 	if (noQtTrayIcon) {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 		if (useAppIndicator) {
 			if (getms() > _psLastIndicatorUpdate + 1000) {
 				psUpdateIndicator();
@@ -378,7 +354,6 @@ void MainWindow::updateIconCounters() {
 				Libs::gtk_status_icon_set_from_pixbuf(_trayIcon, _trayPixbuf);
 			}
 		}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 	} else if (trayIcon) {
 		QIcon icon;
 		QFileInfo iconFile(_trayIconImageFile());
@@ -400,15 +375,12 @@ void MainWindow::updateIconCounters() {
 
 void MainWindow::LibsLoaded() {
 	noQtTrayIcon = !DesktopEnvironment::TryQtTrayIcon();
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	tryAppIndicator = DesktopEnvironment::PreferAppIndicatorTrayIcon();
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 	LOG(("Tray Icon: Try Qt = %1, Prefer appindicator = %2").arg(Logs::b(!noQtTrayIcon)).arg(Logs::b(tryAppIndicator)));
 
 	if (noQtTrayIcon) cSetSupportTray(false);
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	useGtkBase = (Libs::gtk_init_check != nullptr)
 			&& (Libs::gtk_menu_new != nullptr)
 			&& (Libs::gtk_menu_get_type != nullptr)
@@ -454,7 +426,6 @@ void MainWindow::LibsLoaded() {
 	if (useStatusIcon) {
 		DEBUG_LOG(("Status icon api loaded!"));
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 void MainWindow::psCreateTrayIcon() {
@@ -464,7 +435,6 @@ void MainWindow::psCreateTrayIcon() {
 		return;
 	}
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	if (useAppIndicator) {
 		DEBUG_LOG(("Trying to create AppIndicator"));
 		_trayMenu = Libs::gtk_menu_new();
@@ -542,7 +512,6 @@ void MainWindow::psCreateTrayIcon() {
 	} else {
 		workmodeUpdated(Global::WorkMode().value());
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 void MainWindow::psFirstShow() {
@@ -605,7 +574,6 @@ void MainWindow::psUpdateMargins() {
 }
 
 MainWindow::~MainWindow() {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	if (_trayIcon) {
 		Libs::g_object_unref(_trayIcon);
 		_trayIcon = nullptr;
@@ -623,7 +591,6 @@ MainWindow::~MainWindow() {
 		Libs::g_object_unref(_trayIndicator);
 		_trayIndicator = nullptr;
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 } // namespace Platform
diff --git a/Telegram/SourceFiles/platform/linux/notifications_manager_linux.cpp b/Telegram/SourceFiles/platform/linux/notifications_manager_linux.cpp
index 6ed7f15e8..8fd532f2c 100644
--- a/Telegram/SourceFiles/platform/linux/notifications_manager_linux.cpp
+++ b/Telegram/SourceFiles/platform/linux/notifications_manager_linux.cpp
@@ -15,7 +15,6 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 
 namespace Platform {
 namespace Notifications {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 namespace {
 
 bool LibNotifyLoaded() {
@@ -259,10 +258,8 @@ QString GetServerName() {
 auto LibNotifyServerName = QString();
 
 } // namespace
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 bool Supported() {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	static auto Checked = false;
 	if (!Checked) {
 		Checked = true;
@@ -270,31 +267,23 @@ bool Supported() {
 	}
 
 	return !LibNotifyServerName.isEmpty();
-#else
-	return false;
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
 std::unique_ptr<Window::Notifications::Manager> Create(Window::Notifications::System *system) {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	if (Global::NativeNotifications() && Supported()) {
 		return std::make_unique<Manager>(system);
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 	return nullptr;
 }
 
 void Finish() {
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 	if (Libs::notify_is_initted && Libs::notify_uninit) {
 		if (Libs::notify_is_initted()) {
 			Libs::notify_uninit();
 		}
 	}
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 }
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 class Manager::Private {
 public:
 	using Type = Window::Notifications::CachedUserpics::Type;
@@ -347,9 +336,7 @@ private:
 	std::shared_ptr<Manager*> _guarded;
 
 };
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
-#ifndef TDESKTOP_DISABLE_GTK_INTEGRATION
 void Manager::Private::init(Manager *manager) {
 	_guarded = std::make_shared<Manager*>(manager);
 
@@ -551,7 +538,6 @@ void Manager::doClearAllFast() {
 void Manager::doClearFromHistory(History *history) {
 	_private->clearFromHistory(history);
 }
-#endif // !TDESKTOP_DISABLE_GTK_INTEGRATION
 
 } // namespace Notifications
 } // namespace Platform
